@startuml

'interfaces
interface "HotelActionHandler"{
+ void BookHotel();
+ void CancelHotelBooking();
+ void PayHotel();
}
interface "VluchtActionHandler"{
+ void BookFlight();
+ void CancelFlightBooking();
+ void PayFlight();
}
interface "VluchtServicePoort"{
+ ResponseEntity<String> getFlights()
+ ResponseEntity<String> getFlightDetails\n(String itineraryId, String sessionId, String origin, String destination, String date)
+ ResponseEntity<String> fetchApiResponse(String url)
+ void BookFlight(Vlucht vlucht)
+ void CancelFlightBooking(Vlucht vlucht)
+ void PayFlightBooking(Vlucht vlucht)
+ void VoerVluchtUit(Vlucht vlucht)
}
interface "HotelServicePoort"{
+ void BookHotel(Hotel hotel)
+ void CancelHotelBooking(Hotel hotel)
+ void PayHotelBooking(Hotel hotel)
+ void VoerVerblijfUit(Hotel hotel)
}
interface "Bookingstate" {
+ void stateActie()
+ void cancelBooking()
}
interface ApiState {
+ void execute(ApiGateway apiGateway, String url);
}
'classes
class "hotelcontroller" {
+ void BookHotel()
+ void CancelHotelBooking()
+ void PayHotelBooking()
}
class "HotelService"{
- ApiGateway apiGateway
+ void BookHotel(Hotel hotel)
+ void CancelHotelBooking(Hotel hotel)
+ void PayHotelBooking(Hotel hotel)
+ void VoerVerblijfUit(Hotel hotel)
}
class "VluchtController"{
+ void GetFlights()
+ void BookFlight()
+ void CancelFlightBooking()
+ void PayFlightBooking()
}
class "VluchtService"{
- ApiGateway apiGateway
+ ResponseEntity<String> getFlights()
+ ResponseEntity<String> getFlightDetails\n(String itineraryId, String sessionId, String origin, String destination, String date)
+ void BookFlight(Vlucht vlucht)
+ void PayFlightBooking(Vlucht vlucht)
+ void CancelFlightBooking(Vlucht vlucht)
+ void VoerVluchtUit(Vlucht vlucht)
}
class WorkingState {
    + void execute(ApiGateway apiGateway, String url);
}
class RetryState {
    + void execute(ApiGateway apiGateway, String url);
}

class FallbackState {
    + void execute(ApiGateway apiGateway, String url);
}
class ApiGateway{
    - ApiState state
    - String rapidApiKey
    - AsyncHttpClient client
    + ResponseEntity<String> getFlights()
    + ResponseEntity<String> getFlightDetails\n(String itineraryId, String sessionId, String origin, String destination, String date)
    + ResponseEntity<String> fetchResponse(String url)
    + ResponseEntity<String> getCache()
    + void getState()
    + void setState(ApiState state)
}

class "HotelActionManager"{
+ void BookHotel();
+ void CancelHotelBooking();
+ void PayHotel();
}
class "VluchtActionManager"{
+ void BookFlight();
+ void CancelFlightBooking();
+ void PayFlight();
}
class "Gepland" {
+ void stateActie()
+ void cancelBooking()
}
class "Geregeld" {
+ void stateActie()
+ void cancelBooking()
}
class "Betaald" {
+ void stateActie()
+ void cancelBooking()
}
class "Niet uitvoerbaar" {
+ void stateActie()
+ void cancelBooking()
}
class "Uitgevoerd" {
+ void stateActie()
+ void cancelBooking()
}
class "Hotel" {
- int hotelId
- String hotelName
- Bookingstate state
- void BookHotel()
- void CancelHotelBooking()
- void PayHotelBooking()
}
class "Flight" {
- Int flightNumber
- Bookingstate state
- void BookFlight()
- void CancelFlightBooking()
- void PayFlightBooking()
}

'relaties
"hotelcontroller" --> "HotelActionHandler"
"HotelService" 	..|> "HotelServicePoort"
"VluchtController" --> "VluchtActionHandler"
"VluchtService" ..|> "VluchtServicePoort"
"VluchtService" --> "ApiGateway"
"HotelService" --> "ApiGateway"
"HotelActionManager" ..|> "HotelActionHandler"
"VluchtActionManager" ..|> "VluchtActionHandler"
"Gepland" --> "HotelServicePoort"
"Gepland" --> "VluchtServicePoort"
"Geregeld" --> "HotelServicePoort"
"Geregeld" --> "VluchtServicePoort"
"Betaald" --> "HotelServicePoort"
"Betaald" --> "VluchtServicePoort"
"Flight" --> "Bookingstate"
"Hotel" --> "Bookingstate"
"Bookingstate" <|.. "Gepland"
"Bookingstate" <|.. "Geregeld"
"Bookingstate" <|.. "Betaald"
"Bookingstate" <|.. "Niet uitvoerbaar"
"Bookingstate" <|.. "Uitgevoerd"
"VluchtActionManager" --> "Flight"
"HotelActionManager" --> "Hotel"
"ApiGateway" --> "ApiState"
"WorkingState" --|> "ApiState"
"RetryState" --|> "ApiState"
"FallbackState" --|> "ApiState"

@enduml
